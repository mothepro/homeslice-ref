{"version":3,"sources":["shared/components/ColoredButton.js","shared/components/Dropzone.js"],"names":["memo","props","color","children","theme","buttonTheme","createMuiTheme","palette","primary","main","buttonProps","getColor","isDragAccept","isDragReject","success","error","dark","common","black","withStyles","button","borderWidth","borderColor","borderTopLeftRadius","borderBottomLeftRadius","fullHeight","height","withTheme","onDrop","accept","classes","style","useDropzone","getRootProps","getInputProps","fullWidth","className","classNames","variant"],"mappings":"iOA4BeA,oBAxBf,SAAuBC,GACrB,IAAQC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MACnBC,EAAcC,YAAe,2BAC9BF,GAD6B,IAEhCG,QAAS,CACPC,QAAS,CACPC,KAAMP,OAINQ,EAAe,cAAGR,MAAH,EAAUE,MAAV,EAAiBD,SAAjB,yBAAyCF,GAC9D,OACE,kBAAC,IAAD,CAAkBG,MAAOC,GACvB,kBAAC,IAAD,iBAAYK,EAAZ,CAAyBR,MAAM,YAC5BC,Q,iCClBT,+EAmBA,SAASQ,EAASC,EAAcC,EAAcT,GAC5C,OAAIQ,EACKR,EAAMG,QAAQO,QAAQL,KAE3BI,EACKT,EAAMG,QAAQQ,MAAMC,KAEtBZ,EAAMG,QAAQU,OAAOC,MA2CfC,sBA9DA,CACbC,OAAQ,CACNC,YAAa,EACbC,YAAa,sBACbC,oBAAqB,EACrBC,uBAAwB,GAE1BC,WAAY,CACVC,OAAQ,SAsDsB,CAAEC,WAAW,GAAhCR,EAxCf,SAAkBlB,GAChB,IAAQ2B,EAAgE3B,EAAhE2B,OAAQC,EAAwD5B,EAAxD4B,OAAQJ,EAAgDxB,EAAhDwB,WAAYtB,EAAoCF,EAApCE,SAAU2B,EAA0B7B,EAA1B6B,QAASC,EAAiB9B,EAAjB8B,MAAO3B,EAAUH,EAAVG,MAC9D,EAKI4B,YAAY,CACdH,OAAQA,EACRD,OAAQA,IANRK,EADF,EACEA,aACAC,EAFF,EAEEA,cACAtB,EAHF,EAGEA,aACAC,EAJF,EAIEA,aAKF,OACE,kBAAC,IAAD,iBAASoB,IAAT,CAAyBP,OAAO,SAC9B,0BAAWQ,KACX,kBAAC,IAAD,CACEC,WAAS,EACTC,UAAWC,IACTZ,EAAaK,EAAQL,WAAa,KAClCK,EAAQV,QAEVkB,QAAQ,WACRpC,MAAOS,EAASC,EAAcC,EAAcT,GAC5C2B,MAAOA,GAEN5B","file":"static/js/13.86c5af50.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\r\n\r\nfunction ColoredButton(props) {\r\n  const { color, children, theme } = props;\r\n  const buttonTheme = createMuiTheme({\r\n    ...theme,\r\n    palette: {\r\n      primary: {\r\n        main: color\r\n      }\r\n    }\r\n  });\r\n  const buttonProps = (({ color, theme, children, ...o }) => o)(props);\r\n  return (\r\n    <MuiThemeProvider theme={buttonTheme}>\r\n      <Button {...buttonProps} color=\"primary\">\r\n        {children}\r\n      </Button>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nColoredButton.propTypes = {\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default memo(ColoredButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport classNames from \"classnames\";\r\nimport { Box, withStyles } from \"@material-ui/core\";\r\nimport ColoredButton from \"./ColoredButton\";\r\n\r\nconst styles = {\r\n  button: {\r\n    borderWidth: 1,\r\n    borderColor: \"rgba(0, 0, 0, 0.23)\",\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0\r\n  },\r\n  fullHeight: {\r\n    height: \"100%\"\r\n  }\r\n};\r\n\r\nfunction getColor(isDragAccept, isDragReject, theme) {\r\n  if (isDragAccept) {\r\n    return theme.palette.success.main;\r\n  }\r\n  if (isDragReject) {\r\n    return theme.palette.error.dark;\r\n  }\r\n  return theme.palette.common.black;\r\n}\r\n\r\nfunction Dropzone(props) {\r\n  const { onDrop, accept, fullHeight, children, classes, style, theme } = props;\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({\r\n    accept: accept,\r\n    onDrop: onDrop\r\n  });\r\n  return (\r\n    <Box {...getRootProps()} height=\"100%\">\r\n      <input {...getInputProps()} />\r\n      <ColoredButton\r\n        fullWidth\r\n        className={classNames(\r\n          fullHeight ? classes.fullHeight : null,\r\n          classes.button\r\n        )}\r\n        variant=\"outlined\"\r\n        color={getColor(isDragAccept, isDragReject, theme)}\r\n        style={style}\r\n      >\r\n        {children}\r\n      </ColoredButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nDropzone.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  onDrop: PropTypes.func,\r\n  accept: PropTypes.string,\r\n  fullHeight: PropTypes.bool,\r\n  style: PropTypes.object,\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Dropzone);\r\n"],"sourceRoot":""}